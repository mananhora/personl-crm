{"version":3,"sources":["./project/static/$_lazy_route_resource lazy","./project/static/app/app.component.css","./project/static/app/app.component.html","./project/static/app/app.component.ts","./project/static/app/app.module.ts","./project/static/app/app.service.ts","./project/static/app/circles/add/circles.add.component.css","./project/static/app/circles/add/circles.add.component.html","./project/static/app/circles/add/circles.add.component.ts","./project/static/app/circles/circle.ts","./project/static/app/circles/circles.component.css","./project/static/app/circles/circles.component.html","./project/static/app/circles/circles.component.ts","./project/static/app/circles/circles.service.ts","./project/static/app/friends/add/friends.add.component.css","./project/static/app/friends/add/friends.add.component.html","./project/static/app/friends/add/friends.add.component.ts","./project/static/app/friends/friends.component.css","./project/static/app/friends/friends.component.html","./project/static/app/friends/friends.component.ts","./project/static/app/friends/friends.service.ts","./project/static/app/material.module.ts","./project/static/app/profile/edit/profile.edit.component.css","./project/static/app/profile/edit/profile.edit.component.html","./project/static/app/profile/edit/profile.edit.component.ts","./project/static/app/profile/profile.component.css","./project/static/app/profile/profile.component.html","./project/static/app/profile/profile.component.ts","./project/static/app/profile/profile.service.ts","./project/static/app/profile/profile.ts","./project/static/environments/environment.ts","./project/static/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./project/static/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/$$_lazy_route_resource lazy\n// module id = ./project/static/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\\n.mylabel {\\n  font-size: 1.25rem;\\n  color: rgba(0,0,0,0.87);\\n  opacity: 1;\\n}\\n\\n.mylabel .mat-tab-label-active {\\n  opacity: 1;\\n}\\n\\nh1 {\\n  text-align: center;\\n  font-family: 'justbecool';\\n  font-size: 3.25rem;\\n}\\n\\nh2 {\\n  text-align: center;\\n  font-size: 2.5rem;\\n  margin-top: 1rem;\\n  margin-bottom: 2.5rem;\\n}\\n\\np {\\n  margin-bottom: 0em;\\n}\\n\\n.myChipList {\\n  display: block;\\n}\\n\\n.myChipList input {\\n  border-bottom: none;\\n  margin-right: 0.75rem;\\n}\\n\\n.myChipList input:focus {\\n  -webkit-box-shadow: none;\\n          box-shadow: none;\\n}\\n\\n.mat-toolbar-row i {\\n  color: #00796b;\\n}\\n\\n#finish {\\n  background-color: #26a69a;\\n  color: #fff;\\n}\\n\\n#finish:hover {\\n  color: #fff;\\n  background-color: #2bbbad; /* #80cbc4 */\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/app.component.css\n// module id = ./project/static/app/app.component.css\n// module chunks = main","module.exports = \"\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span class=\\\"secondary\\\" routerLink=\\\"/app/home\\\">myVillage</span>\\n      <span class=\\\"example-spacer\\\"></span>\\n      <div *ngIf=\\\"loggedIn == true\\\">\\n        <a routerLink=\\\"/app/friends\\\"><i class=\\\"material-icons\\\">contacts</i></a>\\n        <span class=\\\"example-spacer\\\"></span>\\n        <a routerLink=\\\"/app/profile/0\\\"><i class=\\\"material-icons\\\">person</i></a>\\n        <span class=\\\"example-spacer\\\"></span>\\n        <a href='/logout'><i class=\\\"material-icons\\\">power_settings_new</i></a>\\n        <span class=\\\"example-spacer\\\"></span>\\n      </div>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n\\n  <div *ngIf=\\\"loggedIn == false\\\">\\n    <div class=\\\"container\\\" id=\\\"splash\\\">\\n      <h1>Welcome to myVillage!</h1>\\n      <h2>get started with your community</h2>\\n\\n      <mat-tab-group>\\n        <div class=\\\"label\\\">\\n          <mat-tab label=\\\"login\\\">\\n            <ng-template mat-tab-label>\\n              <span class=\\\"mylabel\\\">login</span>\\n            </ng-template>\\n            <form class=\\\"col s8 offset-s2 card-panel form-signin\\\"\\n                  (ngSubmit)=\\\"login()\\\" #loginForm=\\\"ngForm\\\">\\n              <div class=\\\"section\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-field col s12\\\">\\n                    <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"email\\\" required\\n                            [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\n                    <label for=\\\"email\\\">Email</label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-field col s12\\\">\\n                    <input type=\\\"password\\\" class=\\\"validate\\\" id=\\\"password\\\" required\\n                            [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n                    <label for=\\\"password\\\">Password</label>\\n                  </div>\\n                </div>\\n\\n                <button type=\\\"submit\\\" class=\\\"btn waves-effect waves-light\\\" name=\\\"action\\\"\\n                        [disabled]=\\\"!loginForm.form.valid\\\" >\\n                  Sign in <i class=\\\"material-icons right\\\">send</i>\\n                </button>\\n              </div>\\n            </form>\\n          </mat-tab>\\n        </div>\\n\\n        <mat-tab  label=\\\"register\\\">\\n          <ng-template mat-tab-label>\\n            <span class=\\\"mylabel\\\">register</span>\\n          </ng-template>\\n          <mat-horizontal-stepper #stepper=\\\"matHorizontalStepper\\\">\\n            <ng-template matStepperIcon=\\\"edit\\\">\\n              <mat-icon>done</mat-icon>\\n            </ng-template>\\n            <!-- @TODO figure out formgroup to make registration linear & required -->\\n            <mat-step label=\\\"Login Details\\\">\\n              <p>First, please enter your basic login information.</p>\\n              <div class=\\\"section\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-field col s12\\\">\\n                    <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"name\\\" required\\n                            [(ngModel)]=\\\"name\\\" name=\\\"name\\\">\\n                    <label for=\\\"name\\\">Name</label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-field col s12\\\">\\n                    <input type=\\\"email\\\" class=\\\"validate\\\" id=\\\"email\\\" required\\n                            [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\n                    <label for=\\\"email\\\">Email</label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-field col s12\\\">\\n                    <input type=\\\"password\\\" class=\\\"validate\\\" id=\\\"password\\\" required\\n                            [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n                    <label for=\\\"password\\\">Password</label>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-field col s12\\\">\\n                    <input type=\\\"password\\\" class=\\\"validate\\\" id=\\\"confirmPassword\\\" required\\n                            [(ngModel)]=\\\"confirmPassword\\\" name=\\\"confirmPassword\\\">\\n                    <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n                  </div>\\n                </div>\\n              </div>\\n              <div>\\n                <button mat-button matStepperNext class=\\\"right\\\">Next</button>\\n              </div>\\n            </mat-step>\\n            <mat-step label=\\\"Personal Info\\\">\\n              <p>Tell us a little more about yourself</p>\\n              <div class=\\\"section\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-field col s12\\\">\\n                    <input type=\\\"text\\\" id=\\\"hometown\\\"\\n                            [(ngModel)]=\\\"hometown.name\\\" name=\\\"hometown\\\">\\n                    <label for=\\\"hometown\\\">Where's your hometown?</label>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"input-field col s12\\\">\\n                    <input type=\\\"text\\\" id=\\\"school\\\"\\n                            [(ngModel)]=\\\"school.name\\\" name=\\\"school\\\">\\n                    <label for=\\\"school\\\">Where did you go to school?</label>\\n                  </div>\\n                </div>\\n              </div>\\n              <div>\\n                <button mat-button matStepperNext class=\\\"right\\\">Next</button>\\n                <button mat-button matStepperPrevious class=\\\"right\\\">Back</button>\\n              </div>\\n            </mat-step>\\n            <mat-step label=\\\"Circles\\\">\\n              <div *ngFor=\\\"let circle of circles\\\">\\n                <p>Who are you closest friends from <strong>{{circle.name}}</strong>?</p>\\n                <mat-form-field class=\\\"myChipList\\\">\\n                  <mat-chip-list #friendList>\\n                    <mat-chip *ngFor=\\\"let friend of circle.friends\\\" [removable]=\\\"removable\\\"\\n                      (remove)=\\\"removeFriend(friend, circle)\\\">\\n                        {{friend}}\\n                      <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n                    </mat-chip>\\n                    <input [matChipInputFor]=\\\"friendList\\\"\\n                      [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                      (matChipInputTokenEnd)=\\\"addFriend($event, circle)\\\">\\n                  </mat-chip-list>\\n                </mat-form-field>\\n              </div>\\n\\n              <div>\\n                <button id=\\\"finish\\\" mat-button matStepperNext class=\\\"right btn waves-effect waves-light\\\"\\n                  (click)=\\\"register()\\\">Finish</button>\\n                <button mat-button matStepperPrevious class=\\\"right\\\">Back</button>\\n              </div>\\n            </mat-step>\\n            <mat-step>\\n              <ng-template matStepLabel>Done</ng-template>\\n              <!-- <mat-spinner></mat-spinner> -->\\n              <div class=\\\"row center-align\\\">\\n                <h4>Congratulations! You're all set up.</h4>\\n                <a class=\\\"btn waves-effect waves-light\\\" (click)=\\\"login()\\\">Go to Dashboard</a>\\n              </div>\\n            </mat-step>\\n          </mat-horizontal-stepper>\\n\\n        </mat-tab>\\n      </mat-tab-group>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"loggedIn == true\\\" class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/app.component.html\n// module id = ./project/static/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AppService } from './app.service';\nimport { CirclesService } from './circles/circles.service';\nimport { Circle } from './circles/circle';\nimport { Profile } from './profile/profile';\nimport { MatChipInputEvent } from '@angular/material';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  loggedIn = false;\n  name = '';\n  email = '';\n  password = '';\n  confirmPassword = '';\n  school: Circle;\n  hometown: Circle;\n  circles: Circle[];\n  removable = true;\n  separatorKeysCodes = [ENTER, COMMA];\n\n  constructor(private appService: AppService,\n    private circlesService: CirclesService) { }\n\n  /**\n   * @function isLoggedIn\n   * sets loggedIn variable\n   */\n  isLoggedIn() {\n    this.appService.isLoggedIn()\n      .subscribe(data => {\n        this.loggedIn = data['is_logged_in'];\n    })\n  }\n\n  /**\n   * @function login\n   * login user from email and password. redirect to homepage\n   */\n  login() {\n    this.appService.login(this.email, this.password)\n      .subscribe(data => {\n        location.href = 'http://0.0.0.0:5000/';\n    });\n  }\n\n  /**\n   * @function register\n   * registers a new user account\n   */\n  register() {\n    this.appService.register(this.name, this.email, this.password, this.confirmPassword)\n      .subscribe(data => {\n        this.appService.login(this.email, this.password)\n          .subscribe(data => {\n            for (let i = 0; i < this.circles.length; i++) {\n              this.circlesService.addCircle(this.circles[i].name).subscribe();\n              // for (let i = 0; i < this.circles[i].friends.length; i++) {\n              //   this.circlesService.addFriendToCircle(this.circles[i].friends[i], this.circles[i]);\n              // }\n            }\n        });\n      });\n  }\n\n  /**\n   * @function addFriend\n   * @param {MatChipInputEvent} event - event triggered at chip input\n   * @param {Circle} circle - circle to which chip data (friends) will be added\n   */\n  addFriend(event: MatChipInputEvent, circle: Circle): void {\n    let input = event.input;\n    let value = event.value;\n    if ((value || '').trim()) {\n      if (circle.friends) {\n        circle.friends.push(value.trim());\n      } else {\n        circle.friends = [value.trim()];\n      }\n    }\n    if (input) input.value = '';\n  }\n\n  /**\n   * @function removeFriend\n   * @param {any} friend - friend we would like to remove\n   * @TODO change from any to Profile for more consistent\n   * @param {Circle} circle - circle we are removing the friend from\n   */\n  removeFriend(friend: any, circle: Circle): void {\n    let index = circle.friends.indexOf(friend);\n    if (index >= 0) circle.friends.splice(index, 1);\n  }\n\n  /**\n   * @function ngOnInit\n   * checks if logged in. sets empty values for circles\n   */\n  ngOnInit() {\n    this.isLoggedIn();\n    this.school = new Circle('', 1);\n    this.hometown = new Circle('', 2);\n    this.circles = [this.hometown, this.school];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/app.component.ts","import { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from './material.module';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { CirclesComponent } from './circles/circles.component';\nimport { CirclesAddComponent } from './circles/add/circles.add.component';\nimport { FriendsComponent } from './friends/friends.component';\nimport { FriendsAddComponent } from './friends/add/friends.add.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DialogOverviewExampleDialog } from './profile/profile.component';\nimport { ProfileEditComponent } from './profile/edit/profile.edit.component';\n\nimport { AppService } from './app.service';\nimport { CirclesService } from './circles/circles.service';\nimport { FriendsService } from './friends/friends.service';\nimport { ProfileService } from './profile/profile.service';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/app/home', pathMatch: 'full' },\n  { path: 'app/home', component: CirclesComponent },\n  { path: 'app/home/add', component: CirclesAddComponent },\n  { path: 'app/home/:id', component: CirclesComponent },\n  { path: 'app/friends', component: FriendsComponent },\n  { path: 'app/friends/add', component: FriendsAddComponent },\n  { path: 'app/friends/:id', component: FriendsComponent },\n  { path: 'app/profile', component: ProfileComponent },\n  { path: 'app/profile/:id', component: ProfileComponent },\n  { path: 'app/profile/:id/edit', component: ProfileEditComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CirclesComponent,\n    CirclesAddComponent,\n    FriendsComponent,\n    FriendsAddComponent,\n    ProfileComponent,\n    DialogOverviewExampleDialog,\n    ProfileEditComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    RouterModule.forRoot(\n      appRoutes,\n    )\n  ],\n  entryComponents: [\n    DialogOverviewExampleDialog\n  ],\n  providers: [\n    AppService,\n    CirclesService,\n    FriendsService,\n    ProfileService,\n  ],\n  bootstrap: [\n    AppComponent,\n    CirclesComponent,\n    CirclesAddComponent,\n    FriendsComponent,\n    FriendsAddComponent,\n    ProfileComponent,\n    ProfileEditComponent\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx'\nimport { Profile } from './profile/profile';\n\n@Injectable()\nexport class AppService {\n\n  constructor (private http: HttpClient) { }\n\n  /**\n   * @ignore\n   */\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'my-auth-token'\n    })\n  };\n\n  /**\n   * @function isLoggedIn\n   * Gets /isloggedin\n   */\n  isLoggedIn() {\n    return this.http.get('/isloggedin');\n  }\n\n  /**\n   * @function login\n   * @param {string} email - user inputted email\n   * @param {string} password - user inputted password\n   *\n   * @example\n   * {\n      username: email,\n      password: password\n    }\n   */\n  login (email: string, password: string): Observable<Object> {\n    let object = {\n      username: email,\n      password: password,\n    }\n    return this.http.post<Object>('/login', object, this.httpOptions);\n  }\n\n  /**\n   * @function register\n   * @param {string} name - user inputted (full) name\n   * @param {string} email - user inputted email\n   * @param {string} password - user inputted password\n   * @param {string} confirmPassword - user inputted password confirmation\n   *\n   * @example\n   * {\n       name: name,\n       email: email,\n       password: password,\n       confirmPassword: confirmPassword,\n     }\n   */\n  register (name: string, email: string, password: string, confirmPassword: string): Observable<Object> {\n    let object = {\n      name: name,\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n    }\n    return this.http.post<Object>('/register', object, this.httpOptions);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/app.service.ts","module.exports = \"/* .circles {\\n  width: 23em;\\n  margin-top: 1em;\\n  margin-left: 1em;\\n}\\n\\n.add {\\n  position: absolute;\\n  bottom: 5vh;\\n  right: 5vw;\\n} */\\n\\nh1 {\\n  text-align: center;\\n  font-family: 'justbecool', monospace;\\n}\\n\\n.full-width {\\n  width: 100%;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/circles/add/circles.add.component.css\n// module id = ./project/static/app/circles/add/circles.add.component.css\n// module chunks = main","module.exports = \"\\n  <div class=\\\"row\\\">\\n    <h1>add circle</h1>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <form class=\\\"col s8 offset-s2 card-panel\\\"\\n          (ngSubmit)=\\\"addCircle()\\\" #addCircleForm=\\\"ngForm\\\">\\n\\n      <div class=\\\"section\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"circle.name\\\" required\\n                    [(ngModel)]=\\\"circle.name\\\" name=\\\"circle.name\\\">\\n            <label for=\\\"circle.name\\\">circle name</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"add friends to your circle\\\" multiple [(value)]=\\\"selectedFriends\\\">\\n                <mat-option *ngFor=\\\"let friend of friends\\\" [value]=\\\"friend\\\">{{friend.name}}</mat-option>\\n                <!-- <mat-option>\\n                  <input matInput placeholder=\\\"Add a new friend\\\">\\n                </mat-option> -->\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn waves-effect waves-light\\\" name=\\\"action\\\"\\n                [disabled]=\\\"!addCircleForm.form.valid\\\">\\n          Add Circle <i class=\\\"material-icons right\\\">send</i>\\n        </button>\\n      </div>\\n\\n    </form>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/circles/add/circles.add.component.html\n// module id = ./project/static/app/circles/add/circles.add.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CirclesService } from '../circles.service';\nimport { FriendsService } from '../../friends/friends.service';\nimport { Circle } from '../circle';\nimport { Profile } from '../../profile/profile';\n\n@Component({\n  selector: 'app-circles-add',\n  templateUrl: './circles.add.component.html',\n  styleUrls: ['./circles.add.component.css']\n})\nexport class CirclesAddComponent implements OnInit {\n\n  circle: Circle;\n  friends: Profile[];\n  selectedFriends: string[];\n\n  constructor(private circlesService: CirclesService,\n    private friendsService: FriendsService,\n    private router: Router) { }\n\n  addCircle() {\n    this.circlesService.addCircle(this.circle.name)\n      .subscribe(data => {\n        // if successful,\n        // @TODO should return ID of the circle\n        this.router.navigate(['/app/home']);\n      });\n\n    // for (friend in selectedFriends) {\n    //   this.circlesService.addFriendToCircle({\n    //     friend_id: friend,\n    //     circle_id: circle_id,\n    //   });\n    // }\n  }\n\n  getAllFriends() {\n    this.friendsService.getAllFriends()\n      .subscribe(data => {\n        for (let i = 0; i < data['json_list'].length; i++) {\n          let name = data['json_list'][i]['name'];\n          let email = data['json_list'][i]['email'];\n          let id = data['json_list'][i]['id'];\n          let profile = new Profile(name, id, email);\n\n          if (this.friends) {\n            this.friends.push(profile);\n          } else {\n            this.friends = [profile];\n          }\n        }\n    })\n  }\n\n  ngOnInit() {\n    this.circle = new Circle('', 123);\n    this.getAllFriends();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/circles/add/circles.add.component.ts","export class Circle {\n  constructor(\n    public name: string,\n    private _id: number,\n    private _friends?: string[],\n    public parentCircles?: Circle[],\n    public childCircles?: Circle[],\n  ) { }\n\n  get id(): number {\n    return this._id;\n  }\n\n  set id (id: number) {\n    this._id = id;\n  }\n\n  get friends(): string[] {\n    return this._friends;\n  }\n  set friends (friends: string[]) {\n    this._friends = friends;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/circles/circle.ts","module.exports = \".circles {\\n  width: 23em;\\n  margin-top: 1em;\\n  margin-left: 1em;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n}\\nspan.badge {\\n  line-height: 44px;\\n}\\n.add {\\n  position: absolute;\\n  bottom: 5vh;\\n  right: 5vw;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/circles/circles.component.css\n// module id = ./project/static/app/circles/circles.component.css\n// module chunks = main","module.exports = \"\\n  <mat-card  *ngFor=\\\"let circle of circles\\\" class=\\\"circles\\\" routerLink=\\\"/app/friends/{{circle.id}}\\\">\\n    <mat-card-title>{{circle.name}}</mat-card-title>\\n    <!-- <span class=\\\"badge\\\" data-badge-caption=\\\"friends\\\">4</span> -->\\n  </mat-card>\\n\\n  <div class=\\\"fixed-action-btn\\\" style=\\\"bottom: 45px; right: 24px;\\\">\\n    <a routerLink=\\\"/app/home/add\\\" class=\\\"btn-floating btn-large waves-effect waves-light teal lighten-2\\\">\\n      <i class=\\\"material-icons\\\">add</i>\\n    </a>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/circles/circles.component.html\n// module id = ./project/static/app/circles/circles.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CirclesService } from './circles.service';\nimport { FriendsService } from '../friends/friends.service';\nimport { Circle } from './circle';\nimport { Profile } from '../profile/profile';\n\n@Component({\n  selector: 'app-circles',\n  templateUrl: './circles.component.html',\n  styleUrls: ['./circles.component.css']\n})\nexport class CirclesComponent implements OnInit {\n\n  circles: Circle[];\n  friends: Profile[];\n\n  constructor(private circlesService: CirclesService,\n    private friendsService: FriendsService) { }\n\n  showAllCircles() {\n    this.circlesService.getCircles()\n      .subscribe(data => {\n        for (let i = 0; i < data['json_list'].length; i++) {\n          let name = data['json_list'][i]['circle_name'];\n          let id = data['json_list'][i]['id'];\n          let circle = new Circle(name, id);\n\n          if (this.circles) {\n            this.circles.push(circle);\n          } else {\n            this.circles = [circle];\n          }\n        }\n    });\n  }\n\n  // getFriends(id: number) {\n  //   console.log('yo: tryna get friends');\n  //   this.friendsService.getFriends(id)\n  //     .subscribe(data => {\n  //       console.log('yo: found ', data['json_list']);\n  //       for (let i = 0; i < data['json_list'].length; i++) {\n  //         if (this.friends) {\n  //           this.friends.push(data['json_list'][i]['name']);\n  //         } else {\n  //           this.friends = [ data['json_list'][i]['name'] ];\n  //         }\n  //       }\n  //       if (this.friends) {\n  //         this.friends.push('example name');\n  //       } else {\n  //         this.friends = [ 'example name' ];\n  //       }\n  //   });\n  // }\n\n  ngOnInit() {\n    this.showAllCircles();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/circles/circles.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Circle } from './circle';\n\n@Injectable()\nexport class CirclesService {\n\n  constructor (private http: HttpClient) { }\n\n  /**\n   * @ignore\n   */\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'my-auth-token'\n    })\n  };\n\n  /**\n   * @function getCircles\n   * get ALL circles\n   */\n  getCircles() {\n    return this.http.get('/showallcircles/');\n  }\n\n  /**\n   * @function addCircle\n   * @param {string} name - name of circle to add\n   * @example\n   * {\n       circle_name: name,\n     }\n   */\n  addCircle (name: string): Observable<Object> {\n    let object = {\n      circle_name: name,\n    };\n    return this.http.post<Object>('/addcircle/', object, this.httpOptions);\n  }\n\n  /**\n   * @function addFriendToCircle\n   * @param {number} friend_id - ID of friend to add\n   * @param {number} circle_id - ID of circle to add friend to\n   * @example\n   * {\n       friend_id: friend_id,\n       circle_id: circle_id,\n     }\n   */\n  addFriendToCircle (friend_id: number, circle_id: number): Observable<Object> {\n    let object = {\n      friend_id: friend_id,\n      circle_id: circle_id,\n    }\n    return this.http.post<Object>('/addtocircle/', object, this.httpOptions);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/circles/circles.service.ts","module.exports = \"/* .circles {\\n  width: 23em;\\n  margin-top: 1em;\\n  margin-left: 1em;\\n}\\n\\n.add {\\n  position: absolute;\\n  bottom: 5vh;\\n  right: 5vw;\\n} */\\n\\nh1 {\\n  text-align: center;\\n  font-family: 'justbecool', monospace;\\n}\\n\\n.full-width {\\n  width: 100%;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/friends/add/friends.add.component.css\n// module id = ./project/static/app/friends/add/friends.add.component.css\n// module chunks = main","module.exports = \"\\n  <div class=\\\"row\\\">\\n    <h1>add friend</h1>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <form class=\\\"col s8 offset-s2 card-panel\\\"\\n          (ngSubmit)=\\\"addFriend()\\\" #addFriendForm=\\\"ngForm\\\">\\n\\n      <div class=\\\"section\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"friend.name\\\" required\\n                    [(ngModel)]=\\\"friend.name\\\" name=\\\"friend.name\\\">\\n            <label for=\\\"friend.name\\\">name</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input type=\\\"email\\\" class=\\\"validate\\\" id=\\\"friend.email\\\" required\\n                    [(ngModel)]=\\\"friend.email\\\" name=\\\"friend.email\\\">\\n            <label for=\\\"friend.email\\\">email</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"add to a circle\\\" multiple [(value)]=\\\"friend.circles\\\">\\n                <mat-option *ngFor=\\\"let circle of circles\\\" [value]=\\\"circle\\\">{{circle.name}}</mat-option>\\n                <!-- <mat-option>\\n                  <input matInput placeholder=\\\"Add a new circle\\\">\\n                </mat-option> -->\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn waves-effect waves-light\\\" name=\\\"action\\\"\\n                [disabled]=\\\"!addFriendForm.form.valid\\\">\\n          Add Friend <i class=\\\"material-icons right\\\">send</i>\\n        </button>\\n      </div>\\n\\n    </form>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/friends/add/friends.add.component.html\n// module id = ./project/static/app/friends/add/friends.add.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FriendsService } from '../friends.service';\nimport { CirclesService } from '../../circles/circles.service';\nimport { Profile } from '../../profile/profile';\nimport { Circle } from '../../circles/circle';\n\n@Component({\n  selector: 'app-friends-add',\n  templateUrl: './friends.add.component.html',\n  styleUrls: ['./friends.add.component.css']\n})\nexport class FriendsAddComponent implements OnInit {\n\n  friend: Profile;\n  circles: Circle[];\n\n  constructor(private circlesService: CirclesService,\n    private friendsService: FriendsService,\n    private router: Router) { }\n\n  addFriend() {\n    this.friendsService.addFriend(this.friend.name, this.friend.email, this.friend.circles)\n      .subscribe();\n    // @TODO: for some reason, causes a post error to add this nav into subsrcibe()\n    this.router.navigate(['/app/friends']);\n  }\n\n  getAllCircles() {\n    this.circlesService.getCircles()\n      .subscribe(data => {\n        for (let i = 0; i < data['json_list'].length; i++) {\n          let name = data['json_list'][i]['circle_name'];\n          let id = data['json_list'][i]['id'];\n          let circle = new Circle(name, id);\n\n          if (this.circles) {\n            this.circles.push(circle);\n          } else {\n            this.circles = [circle];\n          }\n        }\n      });\n  }\n\n  // do i want this function to draw straight from the global friend object?\n  // or from parameters we're passing in?\n  // addToCircle(id: number, circles: Circle[]) {\n  //   for (let i = 0; i < circles.length; i++) {\n  //     let circle = circles[i];\n  //     console.log('yo: add to ', circle.name, ', #', circle.id);\n  //     this.circlesService.addFriendToCircle(id, circle.id)\n  //       .subscribe();\n  //     console.log('yo: added for friend #', id);\n  //   }\n  // }\n\n  ngOnInit() {\n    this.friend = new Profile('', '', 555);\n    this.getAllCircles();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/friends/add/friends.add.component.ts","module.exports = \".friends {\\n  width: 23em;\\n  margin-top: 1em;\\n  margin-left: 1em;\\n}\\n\\n.add {\\n  position: absolute;\\n  bottom: 5vh;\\n  right: 5vw;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/friends/friends.component.css\n// module id = ./project/static/app/friends/friends.component.css\n// module chunks = main","module.exports = \"\\n  <mat-card  *ngFor=\\\"let friend of friends\\\" class=\\\"friends\\\" routerLink=\\\"/app/profile/{{friend.id}}\\\">\\n    <mat-card-title-group>\\n      <img mat-card-sm-image *ngIf=\\\"friend.img\\\" src=\\\"{{friend.img}}\\\" alt=\\\"Photo of {{friend.name}}\\\">\\n      <mat-card-title>{{friend.name}}</mat-card-title>\\n      <!-- <mat-card-subtitle>{{friend.email}}</mat-card-subtitle> -->\\n    </mat-card-title-group>\\n  </mat-card>\\n\\n  <div class=\\\"fixed-action-btn\\\" style=\\\"bottom: 45px; right: 24px;\\\">\\n    <a routerLink=\\\"/app/friends/add\\\" class=\\\"btn-floating btn-large waves-effect waves-light teal lighten-2\\\">\\n      <i class=\\\"material-icons teal lighten-2\\\">add</i>\\n    </a>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/friends/friends.component.html\n// module id = ./project/static/app/friends/friends.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FriendsService } from './friends.service';\nimport { Circle } from '../circles/circle';\nimport { Profile } from '../profile/profile';\n\n@Component({\n  selector: 'app-friends',\n  templateUrl: './friends.component.html',\n  styleUrls: ['./friends.component.css']\n})\nexport class FriendsComponent implements OnInit {\n\n  routeId: number;\n  friends: Profile[];\n\n  constructor(private friendsService: FriendsService,\n    private route: ActivatedRoute) { }\n\n  showAllFriends() {\n    this.friendsService.getAllFriends()\n      .subscribe(data => {\n        for (let i = 0; i < data['json_list'].length; i++) {\n          let id = data['json_list'][i]['id'];\n          let name = data['json_list'][i]['name'];\n          let email = data['json_list'][i]['email'];\n          let friend = new Profile(name, email, id);\n\n          if (this.friends) {\n            this.friends.push(friend);\n          } else {\n            this.friends = [friend];\n          }\n        }\n      })\n  }\n\n  getFriendsForCircle(id: number) {\n    this.friendsService.getFriends(id)\n      .subscribe(data => {\n        for (let i = 0; i < data['json_list'].length; i++) {\n          let id = data['json_list'][i]['id'];\n          let name = data['json_list'][i]['name'];\n          let email = data['json_list'][i]['email'];\n          let friend = new Profile(name, email, id);\n\n          if (this.friends) {\n            this.friends.push(friend);\n          } else {\n            this.friends = [friend];\n          }\n        }\n      });\n  }\n\n  ngOnInit() {\n    this.routeId = +this.route.snapshot.paramMap.get('id');\n    if (this.routeId) {\n      this.getFriendsForCircle(this.routeId);\n    } else {\n      this.showAllFriends();\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/friends/friends.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Circle } from '../circles/circle';\n\n@Injectable()\nexport class FriendsService {\n\n  constructor (private http: HttpClient) { }\n\n  /**\n   * @ignore\n   */\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'my-auth-token'\n    })\n  };\n\n  /**\n   * @function getAllFriends\n   * get ALL friends\n   */\n  getAllFriends() {\n    return this.http.get('/showallfriends/');\n  }\n\n  /**\n   * @function getFriends\n   * @param {number} id - get friends for this circle ID\n   * @example\n   * {\n     id: id\n   }\n   */\n  getFriends (id: number): Observable<Object> {\n    let object = {\n      id: id\n    };\n    return this.http.post<Object>('/friendsincircle/', object, this.httpOptions);\n  }\n\n  /**\n   * @function addFriend\n   * @param {string} name - friend's (full) name\n   * @param {string} email - friend's email\n   * @param {Circle[]} circles - circles to add friend to\n   * @example\n   * {\n       name: name,\n       email: email,\n       addToCircle: addToCircle,\n       circles: backendCircles,\n     }\n   */\n  addFriend (name: string, email: string, circles: Circle[]): Observable<Object> {\n    let addToCircle = 0;\n    let backendCircles = [];\n    if (circles) {\n      addToCircle = 1;\n      for (let i = 0; i < circles.length; i++) {\n        backendCircles.push(circles[i].id);\n      }\n    }\n    let object = {\n      name: name,\n      email: email,\n      addToCircle: addToCircle,\n      circles: backendCircles,\n    };\n    return this.http.post<Object>('/addfriend/', object, this.httpOptions);\n  }\n\n  /**\n   * @function addToCircle\n   * @param {string} circle\n   * @example\n   * {\n       circle_name: circle,\n     }\n   */\n  addToCircle (circle: string): Observable<Object> {\n    let object = {\n      circle_name: circle,\n    }\n    return this.http.post<Object>('/addtocircle/', object, this.httpOptions);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/friends/friends.service.ts","import { NgModule } from '@angular/core';\n\nimport {\n  MatButtonModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatSelectModule,\n  MatOptionModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatStepperModule,\n  MatChipsModule,\n  MatProgressSpinnerModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n  ],\n  exports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n  ]\n})\nexport class MaterialModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/material.module.ts","module.exports = \"h1 {\\n  text-align: center;\\n  font-family: 'justbecool', monospace;\\n}\\n\\n.full-width {\\n  width: 100%;\\n}\\n\\n.delete {\\n  color: #9e9e9e;\\n}\\n\\n.delete:hover {\\n  text-decoration: underline;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/profile/edit/profile.edit.component.css\n// module id = ./project/static/app/profile/edit/profile.edit.component.css\n// module chunks = main","module.exports = \"\\n  <div class=\\\"row\\\">\\n    <h1>edit profile</h1>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <form class=\\\"col s8 offset-s2 card-panel\\\"\\n          (ngSubmit)=\\\"editProfile()\\\" #editProfileForm=\\\"ngForm\\\">\\n\\n      <div class=\\\"section\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"model.name\\\"\\n                    [(ngModel)]=\\\"model.name\\\" name=\\\"model.name\\\">\\n            <label for=\\\"model.name\\\">Name</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input type=\\\"email\\\" class=\\\"validate\\\" id=\\\"model.email\\\"\\n                    [(ngModel)]=\\\"model.email\\\" name=\\\"model.email\\\">\\n            <label for=\\\"model.email\\\">Email</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input type=\\\"tel\\\" class=\\\"validate\\\" id=\\\"model.phone\\\"\\n                    [(ngModel)]=\\\"model.phone\\\" name=\\\"model.phone\\\">\\n            <label for=\\\"model.phone\\\">Phone</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"model.location\\\"\\n                    [(ngModel)]=\\\"model.location\\\" name=\\\"model.location\\\">\\n            <label for=\\\"model.location\\\">Location</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input type=\\\"text\\\" class=\\\"validate\\\" id=\\\"model.job\\\"\\n                    [(ngModel)]=\\\"model.job\\\" name=\\\"model.job\\\">\\n            <label for=\\\"model.job\\\">Job</label>\\n          </div>\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn waves-effect waves-light\\\" name=\\\"action\\\"\\n                [disabled]=\\\"!editProfileForm.form.valid\\\">\\n          Finish Editing <i class=\\\"material-icons right\\\">send</i>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"divider\\\"></div>\\n\\n      <div class=\\\"section\\\">\\n        <a class=\\\"delete\\\" (click)=\\\"deleteProfile()\\\">Delete this profile</a>\\n      </div>\\n\\n    </form>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/profile/edit/profile.edit.component.html\n// module id = ./project/static/app/profile/edit/profile.edit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ProfileService } from '../profile.service';\nimport { Profile } from '../profile';\nimport { Circle } from '../../circles/circle';\n\n@Component({\n  selector: 'app-profile-edit',\n  templateUrl: './profile.edit.component.html',\n  styleUrls: ['./profile.edit.component.css']\n})\nexport class ProfileEditComponent implements OnInit {\n\n  routeId: number;\n  model = new Profile('', '', 555);\n\n  constructor(private profileService: ProfileService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  getProfile() {\n    this.routeId = +this.route.snapshot.paramMap.get('id');\n  }\n\n  getMyProfile() {\n    this.profileService.getMyProfile()\n      .subscribe(data => {\n        if (data['name']) this.model.name = data['name'];\n        if (data['email']) this.model.email = data['email'];\n        if (data['id']) this.model.id = data['id'];\n        (data['img']) ? this.model.img = data['img'] :\n          this.model.img = 'assets/images/profile.png';\n        if (data['circles']) this.model.circles = data['circles'];\n        if (data['phone_number']) this.model.phone = data['phone_number'];\n        if (data['location']) this.model.location = data['location'];\n        if (data['notes']) this.model.notes = data['notes'];\n        if (data['job']) this.model.job = data['job'];\n    })\n  }\n\n  getFriendProfile(id: number) {\n    this.profileService.getFriendProfile(id)\n      .subscribe(data => {\n        if (data['name']) this.model.name = data['name'];\n        if (data['email']) this.model.email = data['email'];\n        if (data['id']) this.model.id = data['id'];\n        (data['img']) ? this.model.img = data['img'] :\n          this.model.img = 'assets/images/profile.png';\n        if (data['circles']) this.model.circles = data['circles'];\n        if (data['phone_number']) this.model.phone = data['phone_number'];\n        if (data['location']) this.model.location = data['location'];\n        if (data['notes']) this.model.notes = data['notes'];\n        if (data['job']) this.model.job = data['job'];\n      })\n  }\n\n  /**\n   * @function updateProfile\n   * @param {number} id - ID of profile being edited\n   * @param {string} [location=''] - new location value\n   * @param {string[]} [notes=[]] - new notes value\n   * @param {string} [phone=''] - new phone value\n   * @param {string} [job=''] - new job value\n   */\n  editProfile() {\n    if (!this.model.location) {\n      this.model.location = '';\n    }\n    if (!this.model.phone) {\n      this.model.phone = '';\n    }\n    if (!this.model.job) {\n      this.model.job = '';\n    }\n    if (!this.model.notes) {\n      this.model.notes = [];\n    }\n    this.profileService.updateProfile(\n      this.model.id,\n      this.model.location,\n      this.model.notes,\n      this.model.phone,\n      this.model.job\n    ).subscribe();\n    this.router.navigate(['/app/profile/', this.routeId]);\n  }\n\n  deleteProfile() {\n    alert('deleted');\n  }\n\n  ngOnInit() {\n    this.getProfile();\n\n    if (this.routeId == 0) {\n      this.getMyProfile();\n    } else {\n      this.getFriendProfile(this.routeId);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/profile/edit/profile.edit.component.ts","module.exports = \"h1 {\\n  margin-bottom: 0rem;\\n}\\nh4 {\\n  margin: 0 0 1.6rem 0;\\n}\\nh5 {\\n  font-style: italic;\\n  margin: 0rem 0 1.6rem 0;\\n  color: #526165;\\n}\\n#sidebar-content>div {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-pack: distribute;\\n      justify-content: space-around;\\n}\\n.card-action>a {\\n  margin-right: 0!important;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/profile/profile.component.css\n// module id = ./project/static/app/profile/profile.component.css\n// module chunks = main","module.exports = \"\\n  <!-- <div class=\\\"fixed-action-btn\\\" style=\\\"top: 70px; left: 24px;\\\">\\n    <a class=\\\"btn-floating btn-large waves-effect waves-light teal lighten-2\\\"\\n        routerLink=\\\"/app/home\\\">\\n      <i class=\\\"material-icons\\\">arrow_back</i>\\n    </a>\\n  </div> -->\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s4\\\">\\n      <div class=\\\"card body-font\\\">\\n        <div class=\\\"card-image\\\">\\n          <img src=\\\"{{model._img}}\\\">\\n        </div>\\n        <div id=\\\"sidebar-content\\\">\\n          <div class=\\\"card-content\\\">\\n            <div class=\\\"chip\\\" *ngFor=\\\"let circle of model._circles\\\">\\n              <a routerLink=\\\"/app/friends/{{circle.id}}\\\">{{circle.name}}</a>\\n            </div>\\n          </div>\\n          <div class=\\\"card-action\\\">\\n            <a *ngIf=\\\"model._email\\\" href=\\\"mailto:{{model._email}}\\\"><i class=\\\"material-icons\\\">email</i></a>\\n            <a *ngIf=\\\"model._phone\\\" href=\\\"tel:{{model._phone}}\\\"><i class=\\\"material-icons\\\">phone</i></a>\\n            <a *ngIf=\\\"model._extra\\\" href=\\\"{{model._extra}}\\\"><i class=\\\"material-icons\\\">explicit</i></a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col s1\\\"></div>\\n\\n    <div class=\\\"col s7\\\">\\n      <h1 class=\\\"secondary\\\">{{model._name}}</h1>\\n      <h5 *ngIf=\\\"model._job\\\">{{model._job}}</h5>\\n      <h4 *ngIf=\\\"model._location\\\"><i class=\\\"material-icons\\\">location_on</i> {{model._location}}</h4>\\n      <p *ngIf=\\\"model._reminder\\\" class=\\\"body-font\\\">reminder set for every {{model._reminder}}</p>\\n\\n      <!-- dates -->\\n      <div class=\\\"card body-font\\\">\\n        <div class=\\\"card-content\\\">\\n          <span class=\\\"card-title\\\">important dates\\n            <span class=\\\"badge\\\"><a><i class=\\\"material-icons\\\">add</i></a></span>\\n          </span>\\n          <div *ngIf=\\\"model._dates\\\">\\n            <ul *ngFor=\\\"let date of model._dates\\\" class=\\\"collection\\\">\\n              <li class=\\\"collection-item\\\">{{date}}</li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- names -->\\n      <div class=\\\"card body-font\\\">\\n        <div class=\\\"card-content\\\">\\n          <span class=\\\"card-title\\\">important names\\n            <span class=\\\"badge\\\"><a><i class=\\\"material-icons\\\">add</i></a></span>\\n          </span>\\n          <div *ngIf=\\\"model._names\\\">\\n            <ul *ngFor=\\\"let name of model._names\\\" class=\\\"collection\\\">\\n              <li class=\\\"collection-item\\\">{{name}}</li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- notes -->\\n      <div class=\\\"card body-font\\\">\\n        <div class=\\\"card-content\\\">\\n          <span class=\\\"card-title\\\">notes\\n            <span class=\\\"badge\\\"><a (click)=\\\"openDialog()\\\"><i class=\\\"material-icons\\\">add</i></a></span>\\n          </span>\\n          <div *ngIf=\\\"model._notes\\\">\\n            <ul *ngFor=\\\"let note of model._notes\\\" class=\\\"collection\\\">\\n              <li class=\\\"collection-item\\\">{{note}}</li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"fixed-action-btn\\\" style=\\\"bottom: 45px; right: 24px;\\\">\\n    <a routerLink=\\\"/app/profile/{{routeId}}/edit\\\" class=\\\"btn-floating btn-large waves-effect waves-light teal lighten-2\\\">\\n      <i class=\\\"material-icons\\\">edit</i>\\n    </a>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./project/static/app/profile/profile.component.html\n// module id = ./project/static/app/profile/profile.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ProfileService } from './profile.service';\nimport { Profile } from './profile';\nimport { Circle } from '../circles/circle';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  routeId: number;\n  model = new Profile('', '', 0,);\n\n  constructor(private profileService: ProfileService,\n    private route: ActivatedRoute, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.routeId = +this.route.snapshot.paramMap.get('id');\n\n    if (this.routeId) {\n      this.getFriendProfile(this.routeId);\n    } else {\n      this.getMyProfile();\n    }\n  }\n\n  getMyProfile() {\n    this.profileService.getMyProfile()\n      .subscribe(data => {\n        if (data['name']) this.model.name = data['name'];\n        if (data['email']) this.model.email = data['email'];\n        if (data['id']) this.model.id = data['id'];\n        if (data['img']) this.model.img = data['img'];\n        if (data['circles']) this.model.circles = data['circles'];\n        if (data['phone_number']) this.model.phone = data['phone_number'];\n        if (data['location']) this.model.location = data['location'];\n        if (data['job']) this.model.job = data['job'];\n    })\n  }\n\n  getFriendProfile(id: number) {\n    this.profileService.getFriendProfile(id)\n      .subscribe(data => {\n        if (data['name']) this.model.name = data['name'];\n        if (data['email']) this.model.email = data['email'];\n        if (data['id']) this.model.id = data['id'];\n        (data['img']) ? this.model.img = data['img'] :\n          this.model.img = 'assets/images/profile.png';\n        if (data['circles']) this.model.circles = data['circles'];\n        if (data['phone_number']) this.model.phone = data['phone_number'];\n        if (data['location']) this.model.location = data['location'];\n        if (data['notes']) this.model.notes = data['notes'];\n        if (data['job']) this.model.job = data['job'];\n      });\n    this.getCirclesForFriend(id);\n  }\n\n  getCirclesForFriend(id: number) {\n    this.profileService.getCirclesForFriend(id)\n      .subscribe(data => {\n        for (let i = 0; i < data['json_list'].length; i++) {\n          if (this.model.circles) {\n            this.model.circles.push(new Circle(\n              data['json_list'][i].circle_name,\n              data['json_list'][i].id));\n          } else {\n            this.model.circles = [new Circle(\n              data['json_list'][i].circle_name,\n              data['json_list'][i].id)];\n          }\n        }\n      })\n  }\n\n  openDialog(): void {\n    let dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '250px',\n      data: 'boo'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (this.model.notes) {\n        this.model.notes.push(result);\n      } else if (result) {\n        this.model.notes = [result];\n      }\n    });\n  }\n\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  template: `\n    <h2 mat-dialog-title>Add a note</h2>\n    <mat-dialog-content>\n      <textarea id=\"data\" name=\"data\" [(ngModel)]=\"data\">{{data}}</textarea>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n      <button mat-button (click)=onNoClick()>Cancel</button>\n      <button mat-button (click)=\"dialogRef.close(data)\">Done</button>\n    </mat-dialog-actions>\n  `,\n})\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/profile/profile.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Profile } from './profile';\n\n@Injectable()\nexport class ProfileService {\n\n  constructor (private http: HttpClient) { }\n\n  /**\n   * @ignore\n   */\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'my-auth-token'\n    })\n  };\n\n  /**\n   * @function getMyProfile\n   * gets profile info for logged in user\n   */\n  getMyProfile() {\n    return this.http.get('/userinfo');\n  }\n\n  /**\n   * @function getFriendProfile\n   * @param {number} id - friend ID\n   * @example\n   * {\n       friend_id: id\n     }\n   */\n  getFriendProfile(id: number): Observable<Object> {\n    let id_object = { friend_id: id }; //create JSON object\n    return this.http.post<Object>('/friendinfo/', id_object, this.httpOptions);\n  }\n\n  /**\n   * @function getCirclesForFriend\n   * @param {number} id - friend ID\n   * @example\n   * {\n      friend_id: id\n    }\n   */\n  getCirclesForFriend(id: number): Observable<Object> {\n    let id_object = { friend_id: id }; //create JSON object\n    return this.http.post<Object>('/circlesforfriend/', id_object, this.httpOptions);\n  }\n\n  /**\n   * @function updateProfile\n   * @param {number} id - ID of profile being edited\n   * @param {string} [location=''] - new location value\n   * @param {string[]} [notes=[]] - new notes value\n   * @param {string} [phone=''] - new phone value\n   * @param {string} [job=''] - new job value\n   * @example\n   * {\n       friend_id: id,\n       location: location,\n       notes: notes,\n       phone_number: phone,\n       job: job\n     }\n   */\n  updateProfile(id: number, location: string, notes: string[], phone: string, job: string): Observable<Object> {\n    let id_object = {\n      friend_id: id,\n      location: location,\n      notes: notes,\n      phone_number: phone,\n      job: job\n    };\n    return this.http.post<Object>('/updatefriendinfo', id_object, this.httpOptions);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/profile/profile.service.ts","import { Circle } from '../circles/circle';\n\nexport class Profile {\n  constructor(\n    private _name: string,\n    private _email: string,\n    private _id: number,\n    private _img?: string,\n    private _circles?: Circle[],\n    private _phone?: string,\n    private _location?: string,\n    private _reminder?: string, // < an object?\n    private _notes?: string[],\n    private _job?: string,\n  ) {\n    this.img = 'assets/images/profile.png';\n  }\n\n  get name(): string {\n    return this._name;\n  }\n  set name (name: string) {\n    this._name = name;\n  }\n\n  get email(): string {\n    return this._email;\n  }\n  set email (email: string) {\n    this._email = email;\n  }\n\n  get id(): number {\n    return this._id;\n  }\n  set id (id: number) {\n    this._id = id;\n  }\n\n  get img(): string {\n    return this._img;\n  }\n  set img (img: string) {\n    this._img = img;\n  }\n\n  get circles(): Circle[] {\n    return this._circles;\n  }\n  set circles (circles: Circle[]) {\n    this._circles = circles;\n  }\n\n  get phone(): string {\n    return this._phone;\n  }\n  set phone (phone: string) {\n    this._phone = phone;\n  }\n\n  get location(): string {\n    return this._location;\n  }\n  set location (location: string) {\n    this._location = location;\n  }\n\n  get notes(): string[] {\n    return this._notes;\n  }\n  set notes (notes: string[]) {\n    this._notes = notes;\n  }\n\n  get job(): string {\n    return this._job;\n  }\n  set job (job: string) {\n    this._job = job;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/app/profile/profile.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./project/static/main.ts"],"sourceRoot":"webpack:///"}